FROM golang:1.13.3 AS builder
ARG TARGETARCH

# Install packages
RUN apt-get update && \
    apt-get install -y cmake wget curl git less file \
        libglib2.0-dev libkmod-dev libnl-genl-3-dev linux-libc-dev pkg-config psmisc qemu-utils fuse python3-dev \
        devscripts debhelper bash-completion librdmacm-dev libibverbs-dev xsltproc docbook-xsl \
        libconfig-general-perl libaio-dev libc6-dev sg3-utils iptables libltdl7 python3-pip uuid-runtime libdevmapper-dev iproute2

# GRPC dependencies
# GRPC health probe
RUN wget -q -O /usr/local/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.3.2/grpc_health_probe-linux-${TARGETARCH} && \
    chmod +x /usr/local/bin/grpc_health_probe

# Install libqcow
RUN wget -q -O - https://s3-us-west-1.amazonaws.com/rancher-longhorn/libqcow-alpha-20181117.tar.gz | tar xvzf - -C /usr/src
RUN cd /usr/src/libqcow-20181117 && \
    ./configure
RUN cd /usr/src/libqcow-20181117 && \
    make -j$(nproc) && \
    make install

# protoc
RUN cd /usr/src && \
    TMP_ARCH=${TARGETARCH} &&\
      if [ "${TARGETARCH}" = "arm64" ]; then TMP_ARCH=aarch_64; fi &&\
      if [ "${TARGETARCH}" = "amd64" ]; then TMP_ARCH=x86_64; fi &&\
    wget -q https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/protoc-3.7.1-linux-${TMP_ARCH}.zip && \
    unzip protoc-3.7.1-linux-${TMP_ARCH}.zip -d /usr/local/

# protoc-gen-go
RUN mkdir -p /go/src/github.com && cd /go/src/github.com/ && \
    mkdir golang/ && \
    cd golang && \
    git clone https://github.com/golang/protobuf.git && \
    cd protobuf && \
    git checkout v1.3.2 && \
    cd protoc-gen-go && \
    go build && \
    cp protoc-gen-go /usr/local/bin

# python grpc-tools
RUN pip3 install grpcio==1.22.0 grpcio_tools==1.22.0

COPY . /src
RUN cd /src/ &&\
    ./scripts/build

# Build liblonghorn
RUN cd /usr/src && \
    git clone https://github.com/rancher/liblonghorn.git && \
    cd liblonghorn && \
    git checkout 6592b9967d1b5acbb51a5596abfe0a0d7bad16dc && \
    make deb && \
    dpkg -i ./pkg/liblonghorn_*.deb

# Build TGT
RUN cd /usr/src && \
    git clone https://github.com/rancher/tgt.git && \
    cd tgt && \
    git checkout e042fdd3616ca90619637b5826695a3de9b5dd8e && \
    ./scripts/build-pkg.sh deb && \
    dpkg -i ./pkg/tgt_*.deb

# Build longhorn-instance-manager
RUN mkdir -p /go/src/github.com/longhorn && cd /go/src/github.com/longhorn && \
    git clone https://github.com/longhorn/longhorn-instance-manager.git && \
    cd longhorn-instance-manager && \
    git checkout 7d0d17b63f653fb17ec188eefe05fe444e7199e9 && \
    go build -o ./longhorn-instance-manager && \
    cp longhorn-instance-manager /usr/local/bin
#    cp -r integration/rpc/ ${DAPPER_SOURCE}/integration/rpc/ && \

RUN cp /usr/src/tgt/pkg/tgt_*.deb /src/bin/ &&\
    cp /usr/local/bin/longhorn-instance-manager /src/bin/

FROM ubuntu:18.04
ARG TARGETARCH

RUN apt-get update && apt-get install -y kmod curl nfs-common fuse \
        libibverbs1 librdmacm1 libconfig-general-perl libaio1 sg3-utils \
        iputils-ping telnet iperf qemu-utils wget iproute2

# Install grpc_health_probe
RUN wget -O /usr/local/bin/grpc_health_probe https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/v0.3.0/grpc_health_probe-linux-${TARGETARCH} && \
    chmod +x /usr/local/bin/grpc_health_probe

COPY --from=builder /src/bin/longhorn /src/bin/longhorn-instance-manager /usr/local/bin/

COPY package/launch-simple-longhorn package/engine-manager package/launch-simple-file /usr/local/bin/

COPY --from=builder /src/bin/tgt_*.deb /opt/

RUN dpkg -i /opt/tgt_*.deb

VOLUME /usr/local/bin

# Add Tini
ENV TINI_VERSION v0.18.0
RUN wget -q -O /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${TARGETARCH} && \
    chmod +x /tini
ENTRYPOINT ["/tini", "--"]

CMD ["longhorn"]

